/* Generated by wayland-scanner 1.18.0 */

#ifndef RDKSHELL_CLIENT_CONTROL_SERVER_PROTOCOL_H
#define RDKSHELL_CLIENT_CONTROL_SERVER_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-server.h"

#ifdef  __cplusplus
extern "C" {
#endif

struct wl_client;
struct wl_resource;

/**
 * @page page_rdkshell_client_control The rdkshell_client_control protocol
 * @section page_ifaces_rdkshell_client_control Interfaces
 * - @subpage page_iface_rdkshell_client_control - 
 * @section page_copyright_rdkshell_client_control Copyright
 * <pre>
 *
 * Copyright 2022 RDK Management
 * </pre>
 */
struct rdkshell_client_control;

/**
 * @page page_iface_rdkshell_client_control rdkshell_client_control
 * @section page_iface_rdkshell_client_control_desc Description
 *
 * It can be used by the home app to control the window of an inactive app.
 * @section page_iface_rdkshell_client_control_api API
 * See @ref iface_rdkshell_client_control.
 */
/**
 * @defgroup iface_rdkshell_client_control The rdkshell_client_control interface
 *
 * It can be used by the home app to control the window of an inactive app.
 */
extern const struct wl_interface rdkshell_client_control_interface;

/**
 * @ingroup iface_rdkshell_client_control
 * @struct rdkshell_client_control_interface
 */
struct rdkshell_client_control_interface {
	/**
	 * sets client window bounds and scale
	 *
	 * Sets client window bounds and scale.
	 * @param id Id of the app
	 * @param x the left position of the surface in pixel screen coordinates
	 * @param y the top position of the surface in pixel screen coordinates
	 * @param width the width of the video surface in pixel screen coordinates
	 * @param height the height of the video surface in pixel screen coordinates
	 * @param sx horizontal scale factor, fixed point number
	 * @param sy vertical scale factor, fixed point number representing 
	 */
	void (*set_client_bounds_and_scale)(struct wl_client *client,
					    struct wl_resource *resource,
					    const char *id,
					    int32_t x,
					    int32_t y,
					    uint32_t width,
					    uint32_t height,
					    wl_fixed_t sx,
					    wl_fixed_t sy);
	/**
	 * sets client window bounds
	 *
	 * Sets client window bounds. Scale of the client window is not
	 * changed.
	 * @param id Id of the app
	 * @param x the left position of the surface in pixel screen coordinates
	 * @param y the top position of the surface in pixel screen coordinates
	 * @param width the width of the video surface in pixel screen coordinates
	 * @param height the height of the video surface in pixel screen coordinates
	 */
	void (*set_client_bounds)(struct wl_client *client,
				  struct wl_resource *resource,
				  const char *id,
				  int32_t x,
				  int32_t y,
				  uint32_t width,
				  uint32_t height);
	/**
	 * sets client window scale
	 *
	 * Sets client window scale. Bounds of the client window are not
	 * changed.
	 * @param id Id of the app
	 * @param sx horizontal scale factor, fixed point number
	 * @param sy vertical scale factor, fixed point number representing 
	 */
	void (*set_client_scale)(struct wl_client *client,
				 struct wl_resource *resource,
				 const char *id,
				 wl_fixed_t sx,
				 wl_fixed_t sy);
	/**
	 * @param id Id of the app
	 * @param x the left position of the surface in pixel screen coordinates
	 * @param y the top position of the surface in pixel screen coordinates
	 * @param width the width of the video surface in pixel screen coordinates
	 * @param height the height of the video surface in pixel screen coordinates
	 * @param sx horizontal scale factor, fixed point number
	 * @param sy vertical scale factor, fixed point number representing 
	 * @param opacity opacticty factor
	 * @param zorder location in the z-order
	 * @param visible the visibility of the surface
	 */
	void (*set_client_properties)(struct wl_client *client,
				      struct wl_resource *resource,
				      const char *id,
				      int32_t x,
				      int32_t y,
				      uint32_t width,
				      uint32_t height,
				      wl_fixed_t sx,
				      wl_fixed_t sy,
				      wl_fixed_t opacity,
				      int32_t zorder,
				      int32_t visible);
	/**
	 * @param id Id of the app
	 */
	void (*get_client_properties)(struct wl_client *client,
				      struct wl_resource *resource,
				      const char *id);
};

#define RDKSHELL_CLIENT_CONTROL_CLIENT_PROPERTIES 0

/**
 * @ingroup iface_rdkshell_client_control
 */
#define RDKSHELL_CLIENT_CONTROL_CLIENT_PROPERTIES_SINCE_VERSION 1

/**
 * @ingroup iface_rdkshell_client_control
 */
#define RDKSHELL_CLIENT_CONTROL_SET_CLIENT_BOUNDS_AND_SCALE_SINCE_VERSION 1
/**
 * @ingroup iface_rdkshell_client_control
 */
#define RDKSHELL_CLIENT_CONTROL_SET_CLIENT_BOUNDS_SINCE_VERSION 1
/**
 * @ingroup iface_rdkshell_client_control
 */
#define RDKSHELL_CLIENT_CONTROL_SET_CLIENT_SCALE_SINCE_VERSION 1
/**
 * @ingroup iface_rdkshell_client_control
 */
#define RDKSHELL_CLIENT_CONTROL_SET_CLIENT_PROPERTIES_SINCE_VERSION 1
/**
 * @ingroup iface_rdkshell_client_control
 */
#define RDKSHELL_CLIENT_CONTROL_GET_CLIENT_PROPERTIES_SINCE_VERSION 1

/**
 * @ingroup iface_rdkshell_client_control
 * Sends an client_properties event to the client owning the resource.
 * @param resource_ The client's resource
 * @param id Id of the app
 * @param x the left position of the surface in pixel screen coordinates
 * @param y the top position of the surface in pixel screen coordinates
 * @param width the width of the video surface in pixel screen coordinates
 * @param height the height of the video surface in pixel screen coordinates
 * @param sx horizontal scale factor, fixed point number
 * @param sy vertical scale factor, fixed point number representing 
 * @param opacity opacticty factor
 * @param zorder location in the z-order
 * @param visible the visibility of the surface
 */
static inline void
rdkshell_client_control_send_client_properties(struct wl_resource *resource_, const char *id, int32_t x, int32_t y, uint32_t width, uint32_t height, wl_fixed_t sx, wl_fixed_t sy, wl_fixed_t opacity, int32_t zorder, int32_t visible)
{
	wl_resource_post_event(resource_, RDKSHELL_CLIENT_CONTROL_CLIENT_PROPERTIES, id, x, y, width, height, sx, sy, opacity, zorder, visible);
}

#ifdef  __cplusplus
}
#endif

#endif
