<?xml version="1.0" encoding="UTF-8"?>
<!--
    If not stated otherwise in this file or this component's LICENSE
    file the following copyright and licenses apply:

    Copyright 2022 RDK Management

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<protocol name="rdkshell_shell">
    
    <copyright>
        Copyright 2022 RDK Management
    </copyright>

    <interface name="rdkshell_shell" version="3">

        <enum name="rdkshell_render_flags" bitfield="true">
            <entry name="standard" value="0"/>
            <entry name="overlay" value="1"/>
        </enum>

        <request name="set_render_flags">
            <arg name="id" type="uint" summary="wayland surface id"/>
            <arg name="flags" type="uint" summary="bit mask of render flags"/>
        </request>

        <enum name="client_state">
            <entry name="active" value="0" summary="the client is visible and has focus"/>
            <entry name="inactive" value="1" summary="the client is visible but does not have focus"/>
            <entry name="hidden" value="2" summary="the client is not visible and does not have focus"/>
            <entry name="suspended" value="3" summary="the client is suspended"/>
        </enum>

        <event name="client_state_changed">
            <arg name="state" type="uint" enum="state" summary="the client state"/>
        </event>

        <event name="close">
            <description summary="request for the app to shut down">
                In response to this event the application is expected to clean
                up and shutdown.  Once this event is sent the app will no longer
                by able to display anything on screen and won't receive any
                key presses.
            </description>
        </event>

        <enum name="visibility_policy">
            <entry name="visible_by_default" value="0"
                   summary="surfaces are automatically visible when created"/>
            <entry name="hidden_by_default" value="1"
                   summary="surfaces are hidden when created."/>
        </enum>       

        <request name="set_visibility_policy" since="2">
            <description summary="sets the default visibility policy for surfaces">
                Westeros sets all surfaces to visible when they are created, this
                clashes with some windowing code (Qt) which expects surfaces to
                initially be invisible.  This in turn can cause some artifacts
                when the surface / window is first created.
                This API allows you to change the default policy so the westeros
                behavior is matched to the windowing code.
                The policy can be changed dynamically and applies to any surfaces
                created after the call.
            </description>
            <arg name="policy" type="uint" enum="visibility_policy" summary="the policy to set"/>
        </request>

        <request name="set_suspended" since="3">
            <description summary="signals the window manager that the app has suspended itself">
                This should be called by the app after it has received a state
                notification to suspend - and it has actually suspended. However
                it can also be called out of the blue, if for example in the
                Netflix case where you can exist the app via a menu, which will
                cause it to suspend rather than shutdown.
            </description>
        </request>

        <enum name="error">
            <entry name="forbidden" value="0"
                   summary="tried to set notification or popup flag without capability"/>
        </enum>

    </interface>


</protocol>
